{"name": "test_invest_success[case0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('投标成功！' == '投标成功！'\n    投标成功！ and Decimal('100.00') == '100')", "trace": "self = <test_invest.TestInvest object at 0x03C8F950>\ncase = {'amount': '100', 'expected': '投标成功！'}\ninvest_fixture = (<page.invest_page.InvestPage object at 0x03C72F50>, <page.unserinfo_page.UserInfo object at 0x03C72FD0>)\n\n    @pytest.mark.parametrize('case', InvestCase.success_case_data)\n    def test_invest_success(self, case, invest_fixture):\n        '''投资失败-页面按钮上出现提示的用例'''\n        invest_page, user_page = invest_fixture\n        # 刷新页面\n        invest_page.page_refresh()\n        # 获取投标之前的用户余额\n        current_amount = invest_page.get_user_amount()\n        # 输入投资金额\n        invest_page.input_invest_money(case['amount'])\n        # 点击投标\n        invest_page.click_invest()\n        # 获取投标成功时弹窗提示的信息\n        res = invest_page.get_invest_success_info()\n        # 点击查看并激活\n        invest_page.click_view_activation()\n        # 获取用户投标后的余额\n        user_amount = user_page.get_user_money_amount()\n        # 投资前的余额减去投资后的余额\n        invest_money = decimal.Decimal(current_amount) - decimal.Decimal(user_amount)\n        try:\n            assert case['expected'] == res and invest_money == case['amount']\n    \n            log.info('用例执行通过')\n        except AssertionError as e:\n            log.error('用例断言失败')\n            log.exception(e)\n>           raise e\n\ntestcases\\test_invest.py:165: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_invest.TestInvest object at 0x03C8F950>\ncase = {'amount': '100', 'expected': '投标成功！'}\ninvest_fixture = (<page.invest_page.InvestPage object at 0x03C72F50>, <page.unserinfo_page.UserInfo object at 0x03C72FD0>)\n\n    @pytest.mark.parametrize('case', InvestCase.success_case_data)\n    def test_invest_success(self, case, invest_fixture):\n        '''投资失败-页面按钮上出现提示的用例'''\n        invest_page, user_page = invest_fixture\n        # 刷新页面\n        invest_page.page_refresh()\n        # 获取投标之前的用户余额\n        current_amount = invest_page.get_user_amount()\n        # 输入投资金额\n        invest_page.input_invest_money(case['amount'])\n        # 点击投标\n        invest_page.click_invest()\n        # 获取投标成功时弹窗提示的信息\n        res = invest_page.get_invest_success_info()\n        # 点击查看并激活\n        invest_page.click_view_activation()\n        # 获取用户投标后的余额\n        user_amount = user_page.get_user_money_amount()\n        # 投资前的余额减去投资后的余额\n        invest_money = decimal.Decimal(current_amount) - decimal.Decimal(user_amount)\n        try:\n>           assert case['expected'] == res and invest_money == case['amount']\nE           AssertionError: assert ('投标成功！' == '投标成功！'\nE               投标成功！ and Decimal('100.00') == '100')\n\ntestcases\\test_invest.py:159: AssertionError"}, "description": "投资失败-页面按钮上出现提示的用例", "attachments": [{"name": "log", "source": "49eff500-3cb4-4672-bb79-6cb23b68d195-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'amount': '100', 'expected': '投标成功！'}"}], "start": 1590503344874, "stop": 1590503400040, "uuid": "6d116d8e-5172-4a82-8bc7-299ab3373315", "historyId": "e821bd0c0257244c29617ebb4cdcebbb", "testCaseId": "3a2417abff5f9668d4b364ca952bcb29", "fullName": "testcases.test_invest.TestInvest#test_invest_success", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_invest"}, {"name": "subSuite", "value": "TestInvest"}, {"name": "host", "value": "wo"}, {"name": "thread", "value": "7072-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_invest"}]}